# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.define "un" do |un|
    un.vm.provider "virtualbox" do |vb_un|
      vb_un.name = "Node 1"
      vb_un.memory = 2048
      vb_un.cpus = 2
    end

    un.vm.box =  "ubuntu/focal64"
    un.vm.hostname = "un"
    un.vm.boot_timeout = 1000
    un.vm.network "public_network", bridge: "Realtek USB GbE Family Controller #3"

    un.trigger.after :up do |trigger|
      trigger.run_remote = {inline: "bash /vagrant/initNode.sh -c 27119 -r 27117 -s 27118"}
      #trigger.run_remote = {inline: "bash /vagrant/initNode.sh && /vagrant/initConfigServer.sh"}
    end
    # un.vm.provision "shell", path: "initNode.sh"
  end

  config.vm.define "dos" do |dos|
      dos.vm.provider "virtualbox" do |vb_dos|
        vb_dos.name = "Node 1"
        vb_dos.memory = 2048
        vb_dos.cpus = 2
      end

      un.vm.box =  "ubuntu/focal64"
      un.vm.hostname = "dos"
      un.vm.boot_timeout = 1000
      un.vm.network "public_network", bridge: "Realtek USB GbE Family Controller #3"

      un.trigger.after :up do |trigger|
        trigger.run_remote = {inline: "bash /vagrant/initNode.sh -c 27219 -r 27217 -s 27218"}
        #trigger.run_remote = {inline: "bash /vagrant/initNode.sh && /vagrant/initConfigServer.sh"}
      end
      # un.vm.provision "shell", path: "initNode.sh"
    end

  # Adding RSA public key to VM
  config.vm.provision "shell" do |s|
    ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
    s.inline = <<-SHELL
      echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
      echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
    SHELL
  end

end
